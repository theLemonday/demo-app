apiVersion: v1
kind: ConfigMap
metadata:
  name: frontend-nginx-conf
  namespace: fullstack-app
data:
  nginx.conf: |
    # The identifier Backend is internal to nginx, and used to name this specific upstream
    upstream backend {
        # hello is the internal DNS name used by the backend Service inside Kubernetes
        server backend;
    }

    server {
      root /usr/share/nginx/html;

      location /api/ {
        proxy_pass http://backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
      }

      location / {
        try_files $uri $uri/ /index.html;
      }
    }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
  namespace: fullstack-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: frontend
  template:
    metadata:
      labels:
        app: frontend
    spec:
      containers:
        - name: frontend
          image: {{ .Values.frontendImage }}:{{ .Values.frontendVersion }}
          ports:
            - containerPort: 80
          volumeMounts:
            - name: nginx-conf
              mountPath: /etc/nginx/conf.d/default.conf
              subPath: nginx.conf
      volumes:
        - name: nginx-conf
          configMap:
            name: frontend-nginx-conf
---
apiVersion: v1
kind: Service
metadata:
  name: frontend
  namespace: fullstack-app
spec:
  type: NodePort
  selector:
    app: frontend
  ports:
    - port: 80
      targetPort: 80
      nodePort: {{ .Values.frontendNodePort }}
      protocol: TCP
